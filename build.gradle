plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
def allureVersion = '2.21.0',
    slf4jVersion = "2.0.6",
    junitVersion = "5.9.2",
    restAssuredVersion = "5.3.0",
    assertJVersion = "3.24.2"

dependencies {
    testImplementation(
            "com.codeborne:selenide:6.12.3",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.appium:java-client:8.3.0",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:1.0.12",
            "org.assertj:assertj-core:$assertJVersion"
    )
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}


test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task android(type: Test) {
    useJUnitPlatform {
        includeTags("android")
    }
}

task ios(type: Test) {
    useJUnitPlatform {
        includeTags("ios")
    }
}